{"version":3,"sources":["./src/app/routes/settings/settings-routing.module.ts","./src/app/routes/settings/personal/report/report.component.ts","./src/app/routes/settings/personal/report/report.component.html","./src/app/routes/settings/settings.module.ts","./src/app/routes/settings/personal/password/password.component.ts","./src/app/routes/settings/personal/password/password.component.html","./src/app/routes/settings/personal/base/base.component.html","./src/app/routes/settings/personal/base/base.component.ts","./src/app/routes/settings/personal/binding/binding.component.html","./src/app/routes/settings/personal/binding/binding.component.ts","./src/app/routes/settings/personal/personal.component.ts","./src/app/routes/settings/personal/personal.component.html"],"names":[],"mappings":"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","file":"settings-settings-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SettingsBaseComponent } from './personal/base/base.component';\nimport { SettingsBindingComponent } from './personal/binding/binding.component';\nimport { SettingsPasswordComponent } from './personal/password/password.component';\nimport { SettingsPersonalComponent } from './personal/personal.component';\nimport { SettingsReportComponent } from './personal/report/report.component';\n\nconst routes: Routes = [\n  {\n    path: 'personal',\n    component: SettingsPersonalComponent,\n    children: [\n      { path: '', redirectTo: 'base', pathMatch: 'full' },\n      { path: 'base', component: SettingsBaseComponent },\n      { path: 'binding', component: SettingsBindingComponent },\n      { path: 'password', component: SettingsPasswordComponent },\n      { path: 'report', component: SettingsReportComponent },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsRoutingModule {}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { TitleService, _HttpClient } from '@delon/theme';\nimport { NzMessageService } from 'ng-zorro-antd/message';\n\n@Component({\n  selector: 'app-settings-report',\n  templateUrl: './report.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SettingsReportComponent implements OnInit {\n  url = '/api/users/settings';\n  form = {\n    daily_report: false,\n    weekly_report: false,\n    monthly_report: false,\n  };\n\n  constructor(private http: _HttpClient, private titleSrv: TitleService, private msg: NzMessageService, private cdr: ChangeDetectorRef) {}\n\n  ngOnInit() {\n    this.titleSrv.setTitle('设置报告');\n    this.load();\n  }\n\n  save(value: any): void {\n    this.http.post(this.url, { ...value }).subscribe((res: any) => {\n      if (res.code !== 0) {\n        this.msg.warning(res.message);\n        return;\n      }\n      this.form = res.data;\n      this.msg.success('更新成功');\n    });\n  }\n\n  load(): void {\n    this.http.get(this.url).subscribe((res: any) => {\n      if (res.code !== 0) {\n        this.msg.warning(res.message);\n        return;\n      }\n      this.form = res.data;\n      this.cdr.detectChanges();\n    });\n  }\n}\n","<nz-alert nzType=\"warning\" nzMessage=\"注意！此功能只为 Pro 并且已经绑定 Telegram 的用户使用\"></nz-alert>\n\n<form nz-form #f=\"ngForm\" se-container=\"1\" (ngSubmit)=\"save(form)\" labelWidth=\"100\" class=\"pt-lg\">\n  <se label=\"日报\" extra=\"每天早上 10 点报告昨日消费汇总\">\n    <nz-switch [(ngModel)]=\"form.daily_report\" nzCheckedChildren=\"开\" nzUnCheckedChildren=\"关\" name=\"daily_report\"></nz-switch>\n  </se>\n\n  <se label=\"周报\" extra=\"每周一早上 10 点报告上周消费汇总\">\n    <nz-switch [(ngModel)]=\"form.weekly_report\" nzCheckedChildren=\"开\" nzUnCheckedChildren=\"关\" name=\"weekly_report\"></nz-switch>\n  </se>\n\n  <se label=\"月报\" extra=\"每月 1 号早上 10 点报告上个月消费汇总\">\n    <nz-switch [(ngModel)]=\"form.monthly_report\" nzCheckedChildren=\"开\" nzUnCheckedChildren=\"关\" name=\"monthly_report\"></nz-switch>\n  </se>\n\n  <se col=\"1\">\n    <button nz-button nzType=\"primary\" [disabled]=\"f.invalid\">保存</button>\n  </se>\n</form>\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '@shared';\nimport { SettingsBaseComponent } from './personal/base/base.component';\nimport { SettingsBindingComponent } from './personal/binding/binding.component';\nimport { SettingsPasswordComponent } from './personal/password/password.component';\nimport { SettingsPersonalComponent } from './personal/personal.component';\nimport { SettingsReportComponent } from './personal/report/report.component';\nimport { SettingsRoutingModule } from './settings-routing.module';\n\nconst COMPONENTS = [\n  SettingsPersonalComponent,\n  SettingsBaseComponent,\n  SettingsBindingComponent,\n  SettingsPasswordComponent,\n  SettingsReportComponent,\n];\nconst COMPONENTS_NOROUNT = [];\n\n@NgModule({\n  imports: [SharedModule, SettingsRoutingModule],\n  declarations: [...COMPONENTS, ...COMPONENTS_NOROUNT],\n})\nexport class SettingsModule {}\n","import { ChangeDetectionStrategy, Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { DA_SERVICE_TOKEN, ITokenService } from '@delon/auth';\nimport { TitleService, _HttpClient } from '@delon/theme';\nimport { NzMessageService } from 'ng-zorro-antd/message';\n\n@Component({\n  selector: 'app-settings-password',\n  templateUrl: './password.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SettingsPasswordComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(\n    fb: FormBuilder,\n    private http: _HttpClient,\n    private titleSrv: TitleService,\n    private msg: NzMessageService,\n    private router: Router,\n    @Inject(DA_SERVICE_TOKEN) private tokenService: ITokenService,\n  ) {\n    this.form = fb.group(\n      {\n        old_password: [null, [Validators.required]],\n        new_password: [null, [Validators.required, Validators.minLength(6)]],\n        retype_password: [null, [Validators.required, Validators.minLength(6)]],\n      },\n      { validator: this.matchingPasswords('new_password', 'retype_password') },\n    );\n  }\n\n  ngOnInit() {\n    this.titleSrv.setTitle('修改密码');\n  }\n\n  matchingPasswords(passwordKey: string, passwordConfirmationKey: string) {\n    return (group: FormGroup) => {\n      const passwordInput = group.controls[passwordKey];\n      const passwordConfirmationInput = group.controls[passwordConfirmationKey];\n\n      if (passwordInput.value !== passwordConfirmationInput.value) {\n        return passwordConfirmationInput.setErrors({ notEquivalent: true });\n      }\n    };\n  }\n\n  save(): void {\n    const data = this.form.value;\n    this.http.post(`/api/users/change-password`, data).subscribe((res: any) => {\n      if (res.code !== 0) {\n        this.msg.warning(res.message);\n        return;\n      }\n      this.tokenService.clear();\n      this.router.navigateByUrl(this.tokenService.login_url);\n    });\n  }\n}\n","<nz-alert nzType=\"warning\" nzMessage=\"注意！更新密码以后需要重新登录\"></nz-alert>\n\n<form nz-form [formGroup]=\"form\" se-container=\"1\" (ngSubmit)=\"save()\" labelWidth=\"100\" class=\"pt-lg\">\n  <se label=\"旧密码\">\n    <input type=\"password\" nz-input formControlName=\"old_password\" />\n  </se>\n\n  <se label=\"新密码\" error=\"密码至少6位数\">\n    <input type=\"password\" nz-input formControlName=\"new_password\" />\n  </se>\n\n  <se label=\"确认密码\" error=\"两次密码不一致\">\n    <input type=\"password\" nz-input formControlName=\"retype_password\" />\n  </se>\n\n  <se col=\"1\">\n    <button nz-button nzType=\"primary\" [disabled]=\"form.invalid\">保存</button>\n  </se>\n</form>\n","<nz-alert nzType=\"warning\" nzMessage=\"注意！更新邮箱需要重新激活\"></nz-alert>\n\n<form nz-form #f=\"ngForm\" se-container=\"1\" (ngSubmit)=\"save(form)\" labelWidth=\"100\" class=\"pt-lg\">\n  <se label=\"用户名\">\n    <input type=\"text\" nz-input [(ngModel)]=\"form.username\" name=\"username\" required maxlength=\"32\" />\n  </se>\n\n  <se label=\"邮箱\" [extra]=\"extra\">\n    <input type=\"text\" nz-input [(ngModel)]=\"form.email\" name=\"email\" required maxlength=\"120\" />\n    <ng-template #extra>\n      <span *ngIf=\"form.status === 'unactivated'\">\n        您的邮箱暂未激活，忘记密码将无法找回账户，请点击 <a (click)=\"sendEmail()\">激活</a> 我们将给您的邮箱发送激活邮件。\n      </span>\n      <span *ngIf=\"form.status === 'active'\">您的邮箱已激活</span>\n    </ng-template>\n  </se>\n\n  <se label=\"基础货币\">\n    <input type=\"text\" nz-input [(ngModel)]=\"form.base_currency_code\" name=\"base_currency_code\" disabled />\n  </se>\n\n  <se col=\"1\">\n    <button nz-button nzType=\"primary\" [disabled]=\"f.invalid\">保存</button>\n  </se>\n</form>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { STColumn, STComponent } from '@delon/abc/st';\nimport { SFSchema } from '@delon/form';\nimport { ModalHelper, SettingsService, TitleService, _HttpClient } from '@delon/theme';\nimport { NzMessageService } from 'ng-zorro-antd/message';\nimport { from } from 'rxjs';\n\n@Component({\n  selector: 'app-settings-base',\n  templateUrl: './base.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SettingsBaseComponent implements OnInit {\n  form = {\n    username: '',\n    email: '',\n    status: 'unactivated',\n    base_currency_code: 'CNY',\n  };\n\n  constructor(\n    private http: _HttpClient,\n    private settings: SettingsService,\n    private titleSrv: TitleService,\n    private msg: NzMessageService,\n    private cdr: ChangeDetectorRef,\n  ) {}\n\n  ngOnInit() {\n    this.titleSrv.setTitle('基本设置');\n    this.load();\n  }\n\n  save(value: any): void {\n    this.http.post(`/api/users/me`, value).subscribe((res: any) => {\n      if (res.code !== 0) {\n        this.msg.warning(res.message);\n        return;\n      }\n      const user = { name: res.data.username, email: res.data.email, avatar: res.data.avatar };\n      this.settings.setUser(user);\n      this.form = res.data;\n      this.msg.success('更新成功');\n    });\n  }\n\n  sendEmail(): void {\n    this.http.post(`/api/users/send-confirmation`).subscribe((res: any) => {\n      if (res.code !== 0) {\n        this.msg.warning(res.message);\n        return;\n      }\n      this.form.status = '';\n      this.cdr.detectChanges();\n      this.msg.success(res.data);\n    });\n  }\n\n  load(): void {\n    this.http.get(`/api/users/me`).subscribe((res: any) => {\n      if (res.code !== 0) {\n        this.msg.warning(res.message);\n        return;\n      }\n      this.form = res.data;\n      this.cdr.detectChanges();\n    });\n  }\n}\n","<nz-list nzItemLayout=\"horizontal\">\n  <nz-list-item  [nzActions]=\"[edit, del]\">\n   <ng-template #edit>\n        <a (click)=\"bindTelegram()\"><i nz-icon nzType=\"edit\" theme=\"outline\"></i></a>\n      </ng-template>\n      <ng-template #del>\n        <a disabled *ngIf=\"!telegram\"><i nz-icon nzType=\"delete\" theme=\"outline\"></i></a>\n        <a *ngIf=\"telegram\" nz-popconfirm nzPopconfirmTitle=\"确定要删除吗？\" nzPopconfirmPlacement=\"bottom\" (nzOnConfirm)=\"deleteTelegram()\">\n          <i nz-icon nzType=\"delete\" theme=\"outline\"></i>\n        </a>\n      </ng-template>\n    <nz-list-item-meta nzTitle=\"绑定 Telegram\" [nzAvatar]=\"telegramAvatar\" [nzDescription]=\"telegramDescription\">\n      <ng-template #telegramAvatar>\n        <i nz-icon nzIconfont=\"icon-telegram\" class=\"icon-sm\"></i>\n      </ng-template>\n      <ng-template #telegramDescription>\n        <div *ngIf=\"!telegram\">当前未绑定 Telegram 账号</div>\n        <div *ngIf=\"telegram\">\n          当前绑定的 Telegram 账号\n          <a href=\"https://t.me/{{ telegram?.client_username }}\" target=\"_blank\">@{{ telegram?.client_username }}</a>\n        </div>\n      </ng-template>\n    </nz-list-item-meta>\n  </nz-list-item>\n</nz-list>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { SettingsService, TitleService, _HttpClient } from '@delon/theme';\nimport { NzMessageService } from 'ng-zorro-antd/message';\nimport { NzModalService } from 'ng-zorro-antd/modal';\n\n@Component({\n  selector: 'app-settings-binding',\n  templateUrl: './binding.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SettingsBindingComponent implements OnInit {\n  telegram = { client_username: '' };\n\n  constructor(\n    private http: _HttpClient,\n    public msg: NzMessageService,\n    private modal: NzModalService,\n    private cdr: ChangeDetectorRef,\n    private titleSrv: TitleService,\n    private settings: SettingsService,\n  ) {\n  }\n\n  ngOnInit() {\n    this.titleSrv.setTitle('账号绑定');\n    this.getData();\n  }\n\n  getData() {\n    this.http.get('/api/users/auth-clients').subscribe((res) => {\n      this.telegram = res.data?.telegram;\n      this.cdr.detectChanges();\n    });\n  }\n\n  bindTelegram() {\n    const telegramBotName = this.settings.app.telegram_bot_name;\n    this.http.post('/api/reset-token').subscribe((res) => {\n      const code = `/bind/${res.data.reset_token}`;\n      this.modal.info({\n        nzWidth: '500px',\n        nzTitle: '绑定 Telegram 账号',\n        nzContent: `将下面的绑定码复制发送给 Telegram 机器人 <a href=\"https://t.me/${telegramBotName}\" target=\"_blank\">@${telegramBotName}</a> </br> <code>${code}</code>`,\n        nzOnOk: () => this.getData(),\n      });\n    });\n  }\n\n  deleteTelegram() {\n    this.http.delete('/api/users/auth-client/telegram').subscribe((res) => {\n      if (res.code !== 0) {\n        this.msg.warning(res.message);\n        return;\n      }\n      this.telegram = null;\n      this.cdr.detectChanges();\n      this.msg.success('更新成功');\n    });\n  }\n}\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnDestroy } from '@angular/core';\nimport { ActivationEnd, Router } from '@angular/router';\nimport { _HttpClient } from '@delon/theme';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { debounceTime, filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-settings-personal',\n  templateUrl: './personal.component.html',\n  styleUrls: ['./personal.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SettingsPersonalComponent implements AfterViewInit, OnDestroy {\n  private resize$: Subscription;\n  private router$: Subscription;\n  mode = 'inline';\n  title: string;\n  menus: Array<{ key: string; title: string; selected?: boolean }> = [\n    {\n      key: 'base',\n      title: '基本设置',\n    },\n    {\n      key: 'password',\n      title: '修改密码',\n    },\n    {\n      key: 'binding',\n      title: '账号绑定',\n    },\n    {\n      key: 'report',\n      title: '设置报告',\n    },\n  ];\n  constructor(private router: Router, private cdr: ChangeDetectorRef, private el: ElementRef<HTMLElement>) {\n    this.router$ = this.router.events.pipe(filter((e) => e instanceof ActivationEnd)).subscribe(() => this.setActive());\n  }\n\n  private setActive(): void {\n    const key = this.router.url.substr(this.router.url.lastIndexOf('/') + 1);\n    this.menus.forEach((i) => {\n      i.selected = i.key === key;\n    });\n    this.title = this.menus.find((w) => w.selected).title;\n  }\n\n  to(item: { key: string }): void {\n    this.router.navigateByUrl(`/settings/personal/${item.key}`);\n  }\n\n  private resize(): void {\n    const el = this.el.nativeElement;\n    let mode = 'inline';\n    const { offsetWidth } = el;\n    if (offsetWidth < 641 && offsetWidth > 400) {\n      mode = 'horizontal';\n    }\n    if (window.innerWidth < 768 && offsetWidth > 400) {\n      mode = 'horizontal';\n    }\n    this.mode = mode;\n    this.cdr.detectChanges();\n  }\n\n  ngAfterViewInit(): void {\n    this.resize$ = fromEvent(window, 'resize')\n      .pipe(debounceTime(200))\n      .subscribe(() => this.resize());\n  }\n\n  ngOnDestroy(): void {\n    this.resize$.unsubscribe();\n    this.router$.unsubscribe();\n  }\n}\n","<div class=\"main ant-card-bordered\">\n  <div class=\"menu\">\n    <ul nz-menu [nzMode]=\"mode\">\n      <li *ngFor=\"let m of menus\" nz-menu-item [nzSelected]=\"m.selected\" (click)=\"to(m)\">{{ m.title }}</li>\n    </ul>\n  </div>\n  <div class=\"content\">\n    <div class=\"title\">{{ title }}</div>\n    <router-outlet></router-outlet>\n  </div>\n</div>\n"],"sourceRoot":"webpack:///"}