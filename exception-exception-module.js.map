{"version":3,"sources":["./src/app/routes/exception/404.component.ts","./src/app/routes/exception/exception.module.ts","./src/app/routes/exception/403.component.ts","./src/app/routes/exception/trigger.component.ts","./src/app/routes/exception/500.component.ts","./src/app/routes/exception/exception-routing.module.ts"],"names":[],"mappings":"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","file":"exception-exception-module.js","sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'exception-404',\n  template: ` <exception type=\"404\" style=\"min-height: 500px; height: 80%;\"></exception> `,\n})\nexport class Exception404Component {}\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '@shared';\n\nimport { ExceptionRoutingModule } from './exception-routing.module';\n\nimport { Exception403Component } from './403.component';\nimport { Exception404Component } from './404.component';\nimport { Exception500Component } from './500.component';\nimport { ExceptionTriggerComponent } from './trigger.component';\n\nconst COMPONENTS = [Exception403Component, Exception404Component, Exception500Component, ExceptionTriggerComponent];\nconst COMPONENTS_NOROUNT = [];\n\n@NgModule({\n  imports: [SharedModule, ExceptionRoutingModule],\n  declarations: [...COMPONENTS, ...COMPONENTS_NOROUNT],\n  entryComponents: COMPONENTS_NOROUNT,\n})\nexport class ExceptionModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'exception-403',\n  template: ` <exception type=\"403\" style=\"min-height: 500px; height: 80%;\"></exception> `,\n})\nexport class Exception403Component {}\n","import { Component, Inject } from '@angular/core';\nimport { DA_SERVICE_TOKEN, ITokenService } from '@delon/auth';\nimport { _HttpClient } from '@delon/theme';\n\n@Component({\n  selector: 'exception-trigger',\n  template: `\n    <div class=\"pt-lg\">\n      <nz-card>\n        <button *ngFor=\"let t of types\" (click)=\"go(t)\" nz-button nzType=\"danger\">触发{{ t }}</button>\n        <button nz-button nzType=\"link\" (click)=\"refresh()\">触发刷新Token</button>\n      </nz-card>\n    </div>\n  `,\n})\nexport class ExceptionTriggerComponent {\n  types = [401, 403, 404, 500];\n\n  constructor(private http: _HttpClient, @Inject(DA_SERVICE_TOKEN) private tokenService: ITokenService) {}\n\n  go(type: number): void {\n    this.http.get(`/api/${type}`).subscribe();\n  }\n\n  refresh(): void {\n    this.tokenService.set({ token: 'invalid-token' });\n    // 必须提供一个后端地址，无法通过 Mock 来模拟\n    this.http.post(`https://localhost:5001/auth`).subscribe(\n      (res) => console.warn('成功', res),\n      (err) => {\n        console.log('最后结果失败', err);\n      },\n    );\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'exception-500',\n  template: ` <exception type=\"500\" style=\"min-height: 500px; height: 80%;\"></exception> `,\n})\nexport class Exception500Component {}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { Exception403Component } from './403.component';\nimport { Exception404Component } from './404.component';\nimport { Exception500Component } from './500.component';\nimport { ExceptionTriggerComponent } from './trigger.component';\n\nconst routes: Routes = [\n  { path: '403', component: Exception403Component },\n  { path: '404', component: Exception404Component },\n  { path: '500', component: Exception500Component },\n  { path: 'trigger', component: ExceptionTriggerComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ExceptionRoutingModule {}\n"],"sourceRoot":"webpack:///"}