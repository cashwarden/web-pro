{"version":3,"sources":["./src/app/routes/calendar/index/index.component.ts","./src/app/routes/calendar/index/index.component.html","./src/app/routes/calendar/calendar.module.ts","./src/app/routes/calendar/calendar-routing.module.ts"],"names":[],"mappings":"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","file":"calendar-calendar-module.js","sourcesContent":["import { DatePipe } from '@angular/common';\nimport { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { CacheService } from '@delon/cache';\nimport { _HttpClient } from '@delon/theme';\nimport { NzCalendarMode } from 'ng-zorro-antd/calendar';\nimport { params } from 'src/app/shared/params';\n\n@Component({\n  selector: 'app-calendar-index',\n  styleUrls: ['./index.component.less'],\n  templateUrl: './index.component.html',\n})\nexport class CalendarIndexComponent implements OnInit {\n  q: any = {};\n  rq: any = {};\n  data: any = {};\n  records: any[] = [];\n  loading = true;\n\n  date: Date[] = [];\n  mode: NzCalendarMode = 'month';\n\n  constructor(\n    private http: _HttpClient,\n    private cdr: ChangeDetectorRef,\n    private datePipe: DatePipe,\n    private cache: CacheService,\n  ) {\n  }\n\n  ngOnInit() {\n    const now = new Date();\n    this.q.ledger_id = this.cache.getNone(params.cacheKey.defaultIdLedger);\n    this.rq.ledger_id = this.cache.getNone(params.cacheKey.defaultIdLedger);\n    this.selectChange(now);\n  }\n\n  getData(): void {\n    this.http.get('/api/analysis/calendar', this.q).subscribe((res) => {\n      this.data = res.data;\n      this.loading = false;\n      this.cdr.detectChanges();\n    });\n  }\n\n\n  getRecord(): void {\n    this.http.get('/api/records', this.rq).subscribe((res) => {\n      this.records = res.data.items;\n\n      this.cdr.detectChanges();\n    });\n  }\n\n  getDateData(date: Date): number | null {\n    const current = this.datePipe.transform(date, 'yyyy-MM-dd');\n    if (this.data[current]) {\n      return this.data[current];\n    }\n\n    return null;\n  }\n\n  getMonthData(date: Date): number | null {\n    return null;\n  }\n\n  panelChange(change: { date: Date; mode: string }): void {\n    console.log(`Current value: ${change.date}`);\n    console.log(`Current mode: ${change.mode}`);\n  }\n\n  getDateForSelect(select: Date, days: number): string {\n    const startDate = new Date(select.getTime() - days * 24 * 60 * 60 * 1000);\n    const endDate = new Date(select.getTime() + days * 24 * 60 * 60 * 1000);\n    const start = this.datePipe.transform(startDate, 'yyyy-MM-dd');\n    const end = this.datePipe.transform(endDate, 'yyyy-MM-dd');\n    return start + '~' + end;\n  }\n\n  selectChange(select: Date): void {\n    this.rq.date = this.getDateForSelect(select, 0);\n    this.q.date = this.getDateForSelect(select, 41);\n    this.getRecord();\n    this.getData();\n\n  }\n}\n\n","<div nz-row [nzGutter]=\"24\" class=\"pt-lg\">\n  <div nz-col nzXs=\"24\" nzSm=\"24\" nzMd=\"24\" nzLg=\"16\">\n    <nz-card [nzLoading]=\"loading\" [nzBordered]=\"false\" nzTitle=\"日历图\" class=\"mb-0\">\n      <ng-container *ngIf=\"!loading\">\n        <nz-calendar (nzSelectChange)=\"selectChange($event)\" (nzPanelChange)=\"panelChange($event)\">\n          <ul *nzDateCell=\"let date\" class=\"events\">\n            <div *ngIf=\"getDateData(date) as dateData\">\n              <li>\n                <nz-badge nzStatus=\"success\"> 收入： {{ dateData.income | _currency }} </nz-badge>\n              </li>\n              <li>\n                <nz-badge nzStatus=\"error\"> 支出： {{ dateData.expense | _currency }} </nz-badge>\n              </li>\n            </div>\n          </ul>\n          <ng-container *nzMonthCell=\"let month\">\n            <div *ngIf=\"getMonthData(month) as monthData\" class=\"notes-month\">\n              <section>{{ monthData }}</section>\n              <span>Backlog number</span>\n            </div>\n          </ng-container>\n        </nz-calendar>\n      </ng-container>\n    </nz-card>\n  </div>\n\n  <div nz-col nzXs=\"24\" nzSm=\"24\" nzMd=\"24\" nzLg=\"8\">\n    <nz-card [nzLoading]=\"loading\" [nzBordered]=\"false\" nzTitle=\"详细记录\" class=\"mb-0\">\n      <nz-list>\n        <app-record-rows [items]=\"records\"></app-record-rows>\n      </nz-list>\n    </nz-card>\n  </div>\n</div>\n","import { NgModule, Type } from '@angular/core';\nimport { SharedModule } from '@shared';\nimport { CalendarRoutingModule } from './calendar-routing.module';\nimport { CalendarIndexComponent } from './index/index.component';\n\nconst COMPONENTS: Type<void>[] = [\n  CalendarIndexComponent];\n\n@NgModule({\n  imports: [\n    SharedModule,\n    CalendarRoutingModule\n  ],\n  declarations: COMPONENTS,\n})\nexport class CalendarModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CalendarIndexComponent } from './index/index.component';\n\nconst routes: Routes = [\n\n  { path: 'index', component: CalendarIndexComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CalendarRoutingModule { }\n"],"sourceRoot":"webpack:///"}