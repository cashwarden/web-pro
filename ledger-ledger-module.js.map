{"version":3,"sources":["./src/app/routes/ledger/ledger.module.ts","./src/app/routes/ledger/index/index.component.ts","./src/app/routes/ledger/index/index.component.html","./src/app/routes/ledger/form/form.component.ts","./src/app/routes/ledger/form/form.component.html","./src/app/routes/ledger/ledger-routing.module.ts"],"names":[],"mappings":"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","file":"ledger-ledger-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { SharedModule } from '@shared';\nimport { LedgerFormComponent } from './form/form.component';\nimport { LedgerIndexComponent } from './index/index.component';\nimport { LedgerRoutingModule } from './ledger-routing.module';\n\nconst COMPONENTS = [LedgerIndexComponent];\nconst COMPONENTS_NOROUNT = [LedgerFormComponent];\n\n@NgModule({\n  imports: [SharedModule, LedgerRoutingModule],\n  declarations: [...COMPONENTS, ...COMPONENTS_NOROUNT],\n})\nexport class LedgerModule { }\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { SFSchema } from '@delon/form';\nimport { ModalHelper, _HttpClient } from '@delon/theme';\nimport { NzMessageService } from 'ng-zorro-antd/message';\nimport { LedgerFormComponent } from './../form/form.component';\n\n@Component({\n  selector: 'app-ledger-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LedgerIndexComponent implements OnInit {\n  q: any = {\n    page: 1,\n    pageSize: 50,\n    expand: 'user',\n    name: '',\n  };\n  list: any[] = [];\n  codes: [{ code: string, name: string }];\n\n  loading = true;\n  overview: { count: number; net_asset: number; total_assets: number; liabilities: number };\n\n  searchSchema: SFSchema = {\n    properties: {\n      name: {\n        type: 'string',\n        title: '名称',\n      },\n    },\n  };\n\n  constructor(\n    private http: _HttpClient,\n    private msg: NzMessageService,\n    private modal: ModalHelper,\n    private cdr: ChangeDetectorRef,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getData();\n    this.loadCodes();\n  }\n\n  getData(): void {\n    this.loading = true;\n    const q = {};\n    Object.entries(this.q)\n      .filter(([, value]) => value !== null)\n      .map(([key, value]) => (q[key] = value));\n    this.q = q;\n    this.http.get('/api/ledgers', this.q).subscribe((res) => {\n      this.list = res.data.items;\n      this.loading = false;\n      this.cdr.detectChanges();\n    });\n  }\n\n  form(record: { id?: number } = {}): void {\n    this.modal.create(\n      LedgerFormComponent,\n      { record, codes: this.codes },\n      { size: 'md' },\n    ).subscribe((res) => {\n      this.getData();\n      this.cdr.detectChanges();\n    });\n  }\n\n  loadCodes(): void {\n    this.http.get('/api/currencies/codes').subscribe((res: any) => {\n      if (res.code !== 0) {\n        this.msg.warning(res.message);\n        return;\n      }\n      this.codes = res.data;\n      this.cdr.detectChanges();\n    });\n  }\n\n  submit(value: any): void {\n    this.q.name = value.name;\n    this.getData();\n  }\n\n  reset(): void {\n    this.q.name = '';\n    this.getData();\n  }\n\n  delete(record: any): void {\n    this.http.delete(`/api/ledgers/${record.id}`).subscribe((res) => {\n      if (res?.code !== 0) {\n        this.msg.warning(res?.message);\n        return;\n      }\n      this.getData();\n      this.msg.success('删除成功');\n    });\n  }\n}\n","<div class=\"pt-md\">\n  <nz-card>\n    <div nz-row [nzGutter]=\"{ xs: 6, sm: 16, md: 24, lg: 32 }\">\n      <div nz-col>\n        <sf mode=\"search\" [schema]=\"searchSchema\" (formSubmit)=\"submit($event)\" (formReset)=\"reset()\"></sf>\n      </div>\n    </div>\n  </nz-card>\n</div>\n\n<nz-list [nzDataSource]=\"list\" [nzLoading]=\"loading\" [nzRenderItem]=\"item\" [nzGrid]=\"{ gutter: 24, lg: 6, md: 8, sm: 12, xs: 24 }\">\n  <ng-template #item let-item>\n    <nz-card nzHoverable [nzCover]=\"cover\">\n      <ng-template #cover>\n        <img alt=\"{{ item.title }}\" src=\"{{ item.cover }}\" />\n      </ng-template>\n      <nz-card-meta [nzTitle]=\"nzTitle\" [nzDescription]=\"nzDescription\">\n        <ng-template #nzTitle>\n          <a (click)=\"form(item)\">{{ item.name }} <span *ngIf=\"item.default\">(default)</span></a>\n        </ng-template>\n        <ng-template #nzDescription>\n          {{ item.remark }}\n        </ng-template>\n      </nz-card-meta>\n      <div class=\"card-item-content\">\n        <span class=\"text-grey\">由 {{ item.user.username }} 创建于 {{ item.created_at | date: 'yyyy-MM-dd' }}</span>\n        <div class=\"text-blue-light\">\n          <span class=\"pl-sm\">\n            <i nz-icon nzType=\"edit\" (click)=\"form(item)\"></i>\n          </span>\n          <span class=\"pl-sm\">\n            <i\n              nz-icon\n              nzType=\"delete\"\n              nz-popconfirm\n              nzPopconfirmTitle=\"确定要删除账本吗？如果账本被删除，所有涉及的交易、规则和定时配置将永远失去。\"\n              nzPopconfirmPlacement=\"bottom\"\n              (nzOnConfirm)=\"delete(item)\"\n            ></i>\n          </span>\n        </div>\n      </div>\n    </nz-card>\n  </ng-template>\n</nz-list>\n","import { Component, OnInit } from '@angular/core';\nimport { CacheService } from '@delon/cache';\nimport { _HttpClient } from '@delon/theme';\nimport { NzMessageService } from 'ng-zorro-antd/message';\nimport { NzModalRef } from 'ng-zorro-antd/modal';\nimport { params } from 'src/app/shared/params';\n\n@Component({\n  selector: 'app-ledger-form',\n  templateUrl: './form.component.html',\n})\nexport class LedgerFormComponent implements OnInit {\n  record: any = {};\n  ledger_id = 0;\n\n  form = {\n    cover: '',\n    name: '',\n    type: 'general_ledger',\n    default: false,\n    remark: '',\n    base_currency_code: '',\n  };\n  codes: [{ code: string, name: string }];\n\n  constructor(private http: _HttpClient, private modal: NzModalRef, private msgSrv: NzMessageService, private cache: CacheService) {\n  }\n\n  ngOnInit(): void {\n    this.ledger_id = this.cache.getNone(params.cacheKey.defaultIdLedger);\n    if (this.record.id) {\n      this.form = this.record;\n    }\n  }\n\n  save(value: any) {\n    const url = this.record.id ? `/${this.record.id}` : '';\n    const method = this.record.id ? 'put' : 'post';\n    this.http.request(method, `/api/ledgers${url}`, { body: value }).subscribe((res: any) => {\n      if (res.code !== 0) {\n        this.msgSrv.warning(res.message);\n        return;\n      }\n      if (this.ledger_id === res.data.id) {\n        this.cache.set(params.cacheKey.defaultLedger, res.data);\n      }\n      this.msgSrv.success('保存成功');\n      this.modal.close(res.data);\n    });\n  }\n\n  close() {\n    this.modal.destroy();\n  }\n}\n","<div class=\"modal-header\">\n  <div class=\"modal-title\">账本编辑</div>\n</div>\n\n<form nz-form #f=\"ngForm\" se-container=\"1\" (ngSubmit)=\"save(form)\" labelWidth=\"100\">\n  <!-- <se label=\"封面\">\n    <input type=\"text\" nz-input [(ngModel)]=\"form.cover\" name=\"cover\" />\n  </se> -->\n  <se label=\"名称\">\n    <input type=\"text\" nz-input [(ngModel)]=\"form.name\" name=\"name\" required />\n  </se>\n  <se label=\"基础货币\" optionalHelp=\"账本有记录之后不支持修改\">\n    <nz-select [(ngModel)]=\"form.base_currency_code\" name=\"base_currency_code\" required>\n      <nz-option nzCustomContent [nzLabel]=\"i.name\" [nzValue]=\"i.code\" *ngFor=\"let i of codes\">\n        {{ i.name }}\n      </nz-option>\n    </nz-select>\n  </se>\n  <se label=\"备注\" col=\"1\">\n    <textarea [(ngModel)]=\"form.remark\" name=\"remark\" nz-input rows=\"2\"></textarea>\n  </se>\n  <se label=\"默认账本\" col=\"1\">\n    <nz-switch [(ngModel)]=\"form.default\" name=\"default\"></nz-switch>\n  </se>\n  <se col=\"1\">\n    <button nz-button type=\"button\" (click)=\"close()\">关闭</button>\n    <button nz-button nzType=\"primary\" [disabled]=\"f.invalid\">保存</button>\n  </se>\n</form>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LedgerIndexComponent } from './index/index.component';\n\nconst routes: Routes = [\n  { path: 'index', component: LedgerIndexComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LedgerRoutingModule { }\n"],"sourceRoot":"webpack:///"}